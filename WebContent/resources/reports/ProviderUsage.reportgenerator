<?xml version="1.0"?>
<reportgenerator>
    <properties>
        <title>Provider Usage</title>
        <status>Development</status>
        <parameters>
            <parameter id="product" title="Product" type="PRODUCT_SELECTOR"/>
            <parameter id="provider" title="Provider" type="PROVIDER_SELECTOR"/>
            <parameter id="daterange" title="Date Range" type="DATE_RANGE"/>
        </parameters>
    </properties>
    <content>
        <![CDATA[
            String[] columns = new String[] { "PROVIDER ID", "PROVIDER NAME", "TOTAL CLAIM" };

            String qry =
                    "select "
                    + "b.hpronomor, b.hproname, count(*) as cnt "
                    + "from idnhltpf.dbo.hltclm a "
                    + "inner join idnhltpf.dbo.hltpro b on b.hpronomor = a.hclmnhoscd "
                    + "inner join idnhltpf.dbo.hlthdr c "
                    + "on a.hclmyy=c.hhdryy "
                    + "and a.hclmbr=c.hhdrbr "
                    + "and a.hclmdist=c.hhdrdist "
                    + "and a.hclmpono=c.hhdrpono "
                    + "where "
                    + "hclmrecid<>'C' "
                    + "and c.hhdrinsid='" + client_id + "' ";

            if (product!=null) {
                qry += "and c.hhdryy=" + product.getYear() + " "
                    + "and c.hhdrpono=" + product.getPolicy_number() + " ";
            }

            qry += "and convert(date, convert(varchar, a.hclmcdatey) + '-' + convert(varchar, a.hclmcdatem) + '-' + convert(varchar, a.hclmcdated)) "
                        + "between "
                        + "'" + new SimpleDateFormat("yyyy-MM-dd").format(daterange_date_start) + "' and '" + new SimpleDateFormat("yyyy-MM-dd").format(daterange_date_end) + "' ";

            qry += "group by b.hpronomor, b.hproname "
                    + "order by cnt desc ";

            System.out.println(qry);

            Session s = Libs.sfDB.openSession();
            try {
                List l = s.createSQLQuery(qry).list();

                Workbook wb = new HSSFWorkbook();
                Sheet sheet = wb.createSheet("Most Used Providers");
                sheet.createFreezePane(0, 1, 0, 1);
                int cnt = 0;

                org.apache.poi.ss.usermodel.Row row = sheet.createRow(cnt);

                for (int i=0; i<columns.length; i++) {
                    Libs.createCell(row, i, columns[i]);
                }

                cnt++;

                for (Object[] o : l) {
                    row = sheet.createRow(cnt);

                    for (int i=0; i<o.length; i++) {
                        Libs.createCell(row, i, o[i]);
                    }

                    cnt++;
                }

                FileOutputStream out = new FileOutputStream(fuuid);
                wb.write(out);
                out.close();

                InputStream is = new FileInputStream(fuuid);
                Filedownload.save(is, "application/vnd.ms-excel", "ProviderUsage-" + new SimpleDateFormat("yyyyMMddHHmmss").format(new Date()));
                fuuid.delete();
            } catch (Exception ex) {
                log.error("most_used_providers.reportgenerator", ex);
            } finally {
                if (s!=null && s.isOpen()) s.close();
            }
        ]]>
    </content>
</reportgenerator>